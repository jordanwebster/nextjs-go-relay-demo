// Code generated by ent, DO NOT EDIT.

package ent

import (
	"task/go/ent/schema"
	"task/go/ent/task"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescText is the schema descriptor for text field.
	taskDescText := taskFields[0].Descriptor()
	// task.TextValidator is a validator for the "text" field. It is called by the builders before save.
	task.TextValidator = taskDescText.Validators[0].(func(string) error)
	// taskDescCreatedAt is the schema descriptor for created_at field.
	taskDescCreatedAt := taskFields[1].Descriptor()
	// task.DefaultCreatedAt holds the default value on creation for the created_at field.
	task.DefaultCreatedAt = taskDescCreatedAt.Default.(func() time.Time)
	// taskDescPriority is the schema descriptor for priority field.
	taskDescPriority := taskFields[3].Descriptor()
	// task.DefaultPriority holds the default value on creation for the priority field.
	task.DefaultPriority = taskDescPriority.Default.(int)
}
